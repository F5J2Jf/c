common_env = Environment(
        CPPDEFINES = ['TARGET_PLATFORM_LINUX', ('DEBUG', 1), 'NO_WEBP', 'PROFILE'],
        CFLAGS = ['-Wall', '-g2', '-pedantic', '-Wno-pedantic'],
        CXXFLAGS = ['-fPIC', '-g2', '-Wall', '-std=c++11', '-frtti', '-D__STDC_LIMIT_MACROS', '-Werror=format', '-Wno-unknown-pragmas', '-Wno-error=format-zero-length'],
        )
if common_env['PLATFORM'] == 'darwin':
    common_env.Replace(
        CC = 'clang',
        CXX = 'clang++',
    )
else:
    common_env.Replace(
        CC = 'gcc-5',
        CXX = 'g++-5',
    )

Export('common_env')

env = common_env.Clone()
env.Append(
    CFLAGS = ['-std=c11'],
    CPPPATH = [
        '.',
        '../../libs/jsoncpp/include',
    ],
    LIBPATH = [
        '../../libs/jsoncpp',
    ],
    LIBS = ['pthread', 'json'],
)

shared_lib = env.SharedLibrary(target='mahjong', source=[ ['mahjong.cpp'] ])
env.Install('../../libs', shared_lib)
env.Alias('install', '../../libs')
# env.Program('main', [ ['main.cpp', 'mahjong.cpp'] ])
